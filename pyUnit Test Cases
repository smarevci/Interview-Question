# Test Cases file for the ThirtySecondsFormatter (TD take home interview question)
# I have used numbers greater than 2 digits, smaller than 2 digits, and some edge
# cases where the value is close to 0 and/or 32 to do the testing for this questio
# Author: Shkurte Marevci
# Date: March 7th, 2020

import unittest
import td_question

class TestFormatter(unittest.TestCase):
    def test_twoDigitDouble(self):
        self.assertEqual(td_question.ThirtySecondsFormatter(10.25), '10-08')
        self.assertEqual(td_question.ThirtySecondsFormatter(102.25), '102-08')
        self.assertEqual(td_question.ThirtySecondsFormatter(702.66), '702-21')
        self.assertEqual(td_question.ThirtySecondsFormatter(645.03125), '645-01')
        self.assertEqual(td_question.ThirtySecondsFormatter(1235.21875), '1235-07')
        self.assertEqual(td_question.ThirtySecondsFormatter(32.1), '32-03')
        self.assertEqual(td_question.ThirtySecondsFormatter(31234442.1), '31234442-03')


    def test_oneDigitDouble(self):
        self.assertEqual(td_question.ThirtySecondsFormatter(9.03125), '09-01')
        self.assertEqual(td_question.ThirtySecondsFormatter(9.92307692), '09-29')
        self.assertEqual(td_question.ThirtySecondsFormatter(5.21875), '05-07')
        self.assertEqual(td_question.ThirtySecondsFormatter(3.2), '03-06')

    def test_edgeCases(self):
        self.assertEqual(td_question.ThirtySecondsFormatter(10.100), '10-03')
        self.assertEqual(td_question.ThirtySecondsFormatter(0), '00-00')
        self.assertEqual(td_question.ThirtySecondsFormatter(0.0), '00-00')
        self.assertEqual(td_question.ThirtySecondsFormatter(1000.0), '1000-00')

if __name__ == '__main__':
    unittest.main()
